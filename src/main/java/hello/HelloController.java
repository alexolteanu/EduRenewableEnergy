package hello;

import hello.model.EnergyReading;
import hello.model.EnergyReadingRepository;
import hello.model.WindTurbine;
import hello.model.WindTurbineRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.sql.Timestamp;
import java.util.List;
import java.util.Optional;

/*
 *  http://localhost:8080/demo/add?name=CK400&latitude=44.45&longitude=123.1
 *  http://localhost:8080/demo/all
 *  http://localhost:8080/demo/register?windTurbineId=1&time=2019-01-01%2015:30:00.0&value=300
 *  http://localhost:8080/demo/data
 */


@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class HelloController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private WindTurbineRepository windTurbineRepository;

    @Autowired
    private EnergyReadingRepository energyReadingRepository;

    public HelloController() {
    }

    @GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody String addNewWindTurbine (@RequestParam Float latitude
            , @RequestParam Float longitude, @RequestParam String name) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        WindTurbine n = new WindTurbine(latitude, longitude, name);
        windTurbineRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<WindTurbine> getAllWindTurbines() {
        // This returns a JSON or XML with the users
        return windTurbineRepository.findAll();
    }

    @GetMapping(path="/register") // Map ONLY GET Requests
    public @ResponseBody String addNewEnergyReading (@RequestParam String windTurbineName
            , @RequestParam Float value, @RequestParam Timestamp time) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        List<WindTurbine> windTurbineList = windTurbineRepository.findByName(windTurbineName);
        if (windTurbineList.isEmpty())
            return "WindTurbine with name "+windTurbineName+" could not be found";
        EnergyReading energyReading = new EnergyReading(windTurbineList.get(0), time, value);
        energyReadingRepository.save(energyReading);
        return "Saved";
    }


    @GetMapping(path="/data")
    public @ResponseBody Iterable<EnergyReading> getAllData() {
        // This returns a JSON or XML with the users
        return energyReadingRepository.findAll();
    }
}